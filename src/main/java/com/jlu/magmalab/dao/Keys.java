/*
 * This file is generated by jOOQ.
*/
package com.jlu.magmalab.dao;


import com.jlu.magmalab.dao.tables.TmDistributeValue;
import com.jlu.magmalab.dao.tables.TmElement;
import com.jlu.magmalab.dao.tables.TmExpr;
import com.jlu.magmalab.dao.tables.TmMeltType;
import com.jlu.magmalab.dao.tables.TmMineral;
import com.jlu.magmalab.dao.tables.TmMixType;
import com.jlu.magmalab.dao.tables.TmMixValue;
import com.jlu.magmalab.dao.tables.TmRole;
import com.jlu.magmalab.dao.tables.TmStdType;
import com.jlu.magmalab.dao.tables.TmStdValue;
import com.jlu.magmalab.dao.tables.TmUser;
import com.jlu.magmalab.dao.tables.TmUserRole;
import com.jlu.magmalab.dao.tables.records.TmDistributeValueRecord;
import com.jlu.magmalab.dao.tables.records.TmElementRecord;
import com.jlu.magmalab.dao.tables.records.TmExprRecord;
import com.jlu.magmalab.dao.tables.records.TmMeltTypeRecord;
import com.jlu.magmalab.dao.tables.records.TmMineralRecord;
import com.jlu.magmalab.dao.tables.records.TmMixTypeRecord;
import com.jlu.magmalab.dao.tables.records.TmMixValueRecord;
import com.jlu.magmalab.dao.tables.records.TmRoleRecord;
import com.jlu.magmalab.dao.tables.records.TmStdTypeRecord;
import com.jlu.magmalab.dao.tables.records.TmStdValueRecord;
import com.jlu.magmalab.dao.tables.records.TmUserRecord;
import com.jlu.magmalab.dao.tables.records.TmUserRoleRecord;

import javax.annotation.Generated;

import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>magmLab</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<TmDistributeValueRecord> KEY_TM_DISTRIBUTE_VALUE_PRIMARY = UniqueKeys0.KEY_TM_DISTRIBUTE_VALUE_PRIMARY;
    public static final UniqueKey<TmElementRecord> KEY_TM_ELEMENT_PRIMARY = UniqueKeys0.KEY_TM_ELEMENT_PRIMARY;
    public static final UniqueKey<TmExprRecord> KEY_TM_EXPR_PRIMARY = UniqueKeys0.KEY_TM_EXPR_PRIMARY;
    public static final UniqueKey<TmMeltTypeRecord> KEY_TM_MELT_TYPE_PRIMARY = UniqueKeys0.KEY_TM_MELT_TYPE_PRIMARY;
    public static final UniqueKey<TmMineralRecord> KEY_TM_MINERAL_PRIMARY = UniqueKeys0.KEY_TM_MINERAL_PRIMARY;
    public static final UniqueKey<TmMixTypeRecord> KEY_TM_MIX_TYPE_PRIMARY = UniqueKeys0.KEY_TM_MIX_TYPE_PRIMARY;
    public static final UniqueKey<TmMixValueRecord> KEY_TM_MIX_VALUE_PRIMARY = UniqueKeys0.KEY_TM_MIX_VALUE_PRIMARY;
    public static final UniqueKey<TmRoleRecord> KEY_TM_ROLE_PRIMARY = UniqueKeys0.KEY_TM_ROLE_PRIMARY;
    public static final UniqueKey<TmStdTypeRecord> KEY_TM_STD_TYPE_PRIMARY = UniqueKeys0.KEY_TM_STD_TYPE_PRIMARY;
    public static final UniqueKey<TmStdValueRecord> KEY_TM_STD_VALUE_PRIMARY = UniqueKeys0.KEY_TM_STD_VALUE_PRIMARY;
    public static final UniqueKey<TmUserRecord> KEY_TM_USER_PRIMARY = UniqueKeys0.KEY_TM_USER_PRIMARY;
    public static final UniqueKey<TmUserRoleRecord> KEY_TM_USER_ROLE_PRIMARY = UniqueKeys0.KEY_TM_USER_ROLE_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 {
        public static final UniqueKey<TmDistributeValueRecord> KEY_TM_DISTRIBUTE_VALUE_PRIMARY = Internal.createUniqueKey(TmDistributeValue.TM_DISTRIBUTE_VALUE, "KEY_TM_DISTRIBUTE_VALUE_PRIMARY", TmDistributeValue.TM_DISTRIBUTE_VALUE.ELE_INDEX, TmDistributeValue.TM_DISTRIBUTE_VALUE.MINERAL_INDEX, TmDistributeValue.TM_DISTRIBUTE_VALUE.MELT_INDEX);
        public static final UniqueKey<TmElementRecord> KEY_TM_ELEMENT_PRIMARY = Internal.createUniqueKey(TmElement.TM_ELEMENT, "KEY_TM_ELEMENT_PRIMARY", TmElement.TM_ELEMENT.INDEX);
        public static final UniqueKey<TmExprRecord> KEY_TM_EXPR_PRIMARY = Internal.createUniqueKey(TmExpr.TM_EXPR, "KEY_TM_EXPR_PRIMARY", TmExpr.TM_EXPR.EXPR_ID);
        public static final UniqueKey<TmMeltTypeRecord> KEY_TM_MELT_TYPE_PRIMARY = Internal.createUniqueKey(TmMeltType.TM_MELT_TYPE, "KEY_TM_MELT_TYPE_PRIMARY", TmMeltType.TM_MELT_TYPE.INDEX);
        public static final UniqueKey<TmMineralRecord> KEY_TM_MINERAL_PRIMARY = Internal.createUniqueKey(TmMineral.TM_MINERAL, "KEY_TM_MINERAL_PRIMARY", TmMineral.TM_MINERAL.INDEX);
        public static final UniqueKey<TmMixTypeRecord> KEY_TM_MIX_TYPE_PRIMARY = Internal.createUniqueKey(TmMixType.TM_MIX_TYPE, "KEY_TM_MIX_TYPE_PRIMARY", TmMixType.TM_MIX_TYPE.MIX_ID, TmMixType.TM_MIX_TYPE.MIX_NAME);
        public static final UniqueKey<TmMixValueRecord> KEY_TM_MIX_VALUE_PRIMARY = Internal.createUniqueKey(TmMixValue.TM_MIX_VALUE, "KEY_TM_MIX_VALUE_PRIMARY", TmMixValue.TM_MIX_VALUE.ELE_INDEX, TmMixValue.TM_MIX_VALUE.MIX_ID);
        public static final UniqueKey<TmRoleRecord> KEY_TM_ROLE_PRIMARY = Internal.createUniqueKey(TmRole.TM_ROLE, "KEY_TM_ROLE_PRIMARY", TmRole.TM_ROLE.ROLE_ID);
        public static final UniqueKey<TmStdTypeRecord> KEY_TM_STD_TYPE_PRIMARY = Internal.createUniqueKey(TmStdType.TM_STD_TYPE, "KEY_TM_STD_TYPE_PRIMARY", TmStdType.TM_STD_TYPE.STD_ID);
        public static final UniqueKey<TmStdValueRecord> KEY_TM_STD_VALUE_PRIMARY = Internal.createUniqueKey(TmStdValue.TM_STD_VALUE, "KEY_TM_STD_VALUE_PRIMARY", TmStdValue.TM_STD_VALUE.ELE_INDEX);
        public static final UniqueKey<TmUserRecord> KEY_TM_USER_PRIMARY = Internal.createUniqueKey(TmUser.TM_USER, "KEY_TM_USER_PRIMARY", TmUser.TM_USER.USER_ID);
        public static final UniqueKey<TmUserRoleRecord> KEY_TM_USER_ROLE_PRIMARY = Internal.createUniqueKey(TmUserRole.TM_USER_ROLE, "KEY_TM_USER_ROLE_PRIMARY", TmUserRole.TM_USER_ROLE.USER_ID, TmUserRole.TM_USER_ROLE.ROLE_ID);
    }
}
