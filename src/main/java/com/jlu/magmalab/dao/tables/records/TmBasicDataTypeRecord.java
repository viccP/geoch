/*
 * This file is generated by jOOQ.
*/
package com.jlu.magmalab.dao.tables.records;


import com.jlu.magmalab.dao.tables.TmBasicDataType;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TmBasicDataTypeRecord extends UpdatableRecordImpl<TmBasicDataTypeRecord> implements Record4<String, String, Integer, String> {

    private static final long serialVersionUID = -1763125824;

    /**
     * Setter for <code>magmLab.TM_BASIC_DATA_TYPE.DATA_ID</code>.
     */
    public void setDataId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>magmLab.TM_BASIC_DATA_TYPE.DATA_ID</code>.
     */
    public String getDataId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>magmLab.TM_BASIC_DATA_TYPE.DATA_NAME</code>.
     */
    public void setDataName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>magmLab.TM_BASIC_DATA_TYPE.DATA_NAME</code>.
     */
    public String getDataName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>magmLab.TM_BASIC_DATA_TYPE.DATA_TYPE</code>. 0:初始岩浆 1:初始岩体 2:标准化值 3:混染物
     */
    public void setDataType(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>magmLab.TM_BASIC_DATA_TYPE.DATA_TYPE</code>. 0:初始岩浆 1:初始岩体 2:标准化值 3:混染物
     */
    public Integer getDataType() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>magmLab.TM_BASIC_DATA_TYPE.MEMO</code>.
     */
    public void setMemo(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>magmLab.TM_BASIC_DATA_TYPE.MEMO</code>.
     */
    public String getMemo() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, Integer, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, Integer, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return TmBasicDataType.TM_BASIC_DATA_TYPE.DATA_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return TmBasicDataType.TM_BASIC_DATA_TYPE.DATA_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return TmBasicDataType.TM_BASIC_DATA_TYPE.DATA_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return TmBasicDataType.TM_BASIC_DATA_TYPE.MEMO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getDataId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getDataName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getDataType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getMemo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getDataId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getDataName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getDataType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getMemo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TmBasicDataTypeRecord value1(String value) {
        setDataId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TmBasicDataTypeRecord value2(String value) {
        setDataName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TmBasicDataTypeRecord value3(Integer value) {
        setDataType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TmBasicDataTypeRecord value4(String value) {
        setMemo(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TmBasicDataTypeRecord values(String value1, String value2, Integer value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TmBasicDataTypeRecord
     */
    public TmBasicDataTypeRecord() {
        super(TmBasicDataType.TM_BASIC_DATA_TYPE);
    }

    /**
     * Create a detached, initialised TmBasicDataTypeRecord
     */
    public TmBasicDataTypeRecord(String dataId, String dataName, Integer dataType, String memo) {
        super(TmBasicDataType.TM_BASIC_DATA_TYPE);

        set(0, dataId);
        set(1, dataName);
        set(2, dataType);
        set(3, memo);
    }
}
