/*
 * This file is generated by jOOQ.
*/
package com.jlu.magmalab.dao.tables.daos;


import com.jlu.magmalab.dao.tables.TmMixValue;
import com.jlu.magmalab.dao.tables.records.TmMixValueRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TmMixValueDao extends DAOImpl<TmMixValueRecord, com.jlu.magmalab.dao.tables.pojos.TmMixValue, Record2<String, String>> {

    /**
     * Create a new TmMixValueDao without any configuration
     */
    public TmMixValueDao() {
        super(TmMixValue.TM_MIX_VALUE, com.jlu.magmalab.dao.tables.pojos.TmMixValue.class);
    }

    /**
     * Create a new TmMixValueDao with an attached configuration
     */
    public TmMixValueDao(Configuration configuration) {
        super(TmMixValue.TM_MIX_VALUE, com.jlu.magmalab.dao.tables.pojos.TmMixValue.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Record2<String, String> getId(com.jlu.magmalab.dao.tables.pojos.TmMixValue object) {
        return compositeKeyRecord(object.getEleName(), object.getMixId());
    }

    /**
     * Fetch records that have <code>ELE_NAME IN (values)</code>
     */
    public List<com.jlu.magmalab.dao.tables.pojos.TmMixValue> fetchByEleName(String... values) {
        return fetch(TmMixValue.TM_MIX_VALUE.ELE_NAME, values);
    }

    /**
     * Fetch records that have <code>MIX_ID IN (values)</code>
     */
    public List<com.jlu.magmalab.dao.tables.pojos.TmMixValue> fetchByMixId(String... values) {
        return fetch(TmMixValue.TM_MIX_VALUE.MIX_ID, values);
    }

    /**
     * Fetch records that have <code>MIX_VALUE IN (values)</code>
     */
    public List<com.jlu.magmalab.dao.tables.pojos.TmMixValue> fetchByMixValue(Double... values) {
        return fetch(TmMixValue.TM_MIX_VALUE.MIX_VALUE, values);
    }
}
