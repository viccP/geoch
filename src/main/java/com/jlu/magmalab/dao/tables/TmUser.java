/*
 * This file is generated by jOOQ.
*/
package com.jlu.magmalab.dao.tables;


import com.jlu.magmalab.dao.Indexes;
import com.jlu.magmalab.dao.Keys;
import com.jlu.magmalab.dao.Magmlab;
import com.jlu.magmalab.dao.tables.records.TmUserRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 用户表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TmUser extends TableImpl<TmUserRecord> {

    private static final long serialVersionUID = 1708543672;

    /**
     * The reference instance of <code>magmLab.TM_USER</code>
     */
    public static final TmUser TM_USER = new TmUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TmUserRecord> getRecordType() {
        return TmUserRecord.class;
    }

    /**
     * The column <code>magmLab.TM_USER.USER_ID</code>.
     */
    public final TableField<TmUserRecord, String> USER_ID = createField("USER_ID", org.jooq.impl.SQLDataType.CHAR(32).nullable(false), this, "");

    /**
     * The column <code>magmLab.TM_USER.LOGIN_ID</code>.
     */
    public final TableField<TmUserRecord, String> LOGIN_ID = createField("LOGIN_ID", org.jooq.impl.SQLDataType.CHAR(40), this, "");

    /**
     * The column <code>magmLab.TM_USER.PASSWORD</code>.
     */
    public final TableField<TmUserRecord, String> PASSWORD = createField("PASSWORD", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>magmLab.TM_USER.USER_NAME</code>.
     */
    public final TableField<TmUserRecord, String> USER_NAME = createField("USER_NAME", org.jooq.impl.SQLDataType.CHAR(100), this, "");

    /**
     * The column <code>magmLab.TM_USER.SEX</code>.
     */
    public final TableField<TmUserRecord, Integer> SEX = createField("SEX", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>magmLab.TM_USER.PHONE_NO</code>.
     */
    public final TableField<TmUserRecord, String> PHONE_NO = createField("PHONE_NO", org.jooq.impl.SQLDataType.CHAR(21), this, "");

    /**
     * The column <code>magmLab.TM_USER.MEMO</code>.
     */
    public final TableField<TmUserRecord, String> MEMO = createField("MEMO", org.jooq.impl.SQLDataType.CHAR(200), this, "");

    /**
     * The column <code>magmLab.TM_USER.UPD_TIME</code>.
     */
    public final TableField<TmUserRecord, Timestamp> UPD_TIME = createField("UPD_TIME", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>magmLab.TM_USER.PWD_STATUS</code>.
     */
    public final TableField<TmUserRecord, Integer> PWD_STATUS = createField("PWD_STATUS", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>magmLab.TM_USER</code> table reference
     */
    public TmUser() {
        this(DSL.name("TM_USER"), null);
    }

    /**
     * Create an aliased <code>magmLab.TM_USER</code> table reference
     */
    public TmUser(String alias) {
        this(DSL.name(alias), TM_USER);
    }

    /**
     * Create an aliased <code>magmLab.TM_USER</code> table reference
     */
    public TmUser(Name alias) {
        this(alias, TM_USER);
    }

    private TmUser(Name alias, Table<TmUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private TmUser(Name alias, Table<TmUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "用户表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Magmlab.MAGMLAB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TM_USER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TmUserRecord> getPrimaryKey() {
        return Keys.KEY_TM_USER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TmUserRecord>> getKeys() {
        return Arrays.<UniqueKey<TmUserRecord>>asList(Keys.KEY_TM_USER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TmUser as(String alias) {
        return new TmUser(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TmUser as(Name alias) {
        return new TmUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TmUser rename(String name) {
        return new TmUser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TmUser rename(Name name) {
        return new TmUser(name, null);
    }
}
