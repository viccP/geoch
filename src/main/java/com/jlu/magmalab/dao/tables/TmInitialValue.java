/*
 * This file is generated by jOOQ.
*/
package com.jlu.magmalab.dao.tables;


import com.jlu.magmalab.dao.Indexes;
import com.jlu.magmalab.dao.Keys;
import com.jlu.magmalab.dao.Magmlab;
import com.jlu.magmalab.dao.tables.records.TmInitialValueRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TmInitialValue extends TableImpl<TmInitialValueRecord> {

    private static final long serialVersionUID = -677651801;

    /**
     * The reference instance of <code>magmLab.TM_INITIAL_VALUE</code>
     */
    public static final TmInitialValue TM_INITIAL_VALUE = new TmInitialValue();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TmInitialValueRecord> getRecordType() {
        return TmInitialValueRecord.class;
    }

    /**
     * The column <code>magmLab.TM_INITIAL_VALUE.INITIAL_ID</code>. 初始熔体ID
     */
    public final TableField<TmInitialValueRecord, String> INITIAL_ID = createField("INITIAL_ID", org.jooq.impl.SQLDataType.CHAR(48).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "初始熔体ID");

    /**
     * The column <code>magmLab.TM_INITIAL_VALUE.ELE_INDEX</code>. 元素序号
     */
    public final TableField<TmInitialValueRecord, Integer> ELE_INDEX = createField("ELE_INDEX", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "元素序号");

    /**
     * The column <code>magmLab.TM_INITIAL_VALUE.INITIAL_VALUE</code>. 初始熔体值
     */
    public final TableField<TmInitialValueRecord, Double> INITIAL_VALUE = createField("INITIAL_VALUE", org.jooq.impl.SQLDataType.DOUBLE, this, "初始熔体值");

    /**
     * Create a <code>magmLab.TM_INITIAL_VALUE</code> table reference
     */
    public TmInitialValue() {
        this(DSL.name("TM_INITIAL_VALUE"), null);
    }

    /**
     * Create an aliased <code>magmLab.TM_INITIAL_VALUE</code> table reference
     */
    public TmInitialValue(String alias) {
        this(DSL.name(alias), TM_INITIAL_VALUE);
    }

    /**
     * Create an aliased <code>magmLab.TM_INITIAL_VALUE</code> table reference
     */
    public TmInitialValue(Name alias) {
        this(alias, TM_INITIAL_VALUE);
    }

    private TmInitialValue(Name alias, Table<TmInitialValueRecord> aliased) {
        this(alias, aliased, null);
    }

    private TmInitialValue(Name alias, Table<TmInitialValueRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Magmlab.MAGMLAB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TM_INITIAL_VALUE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TmInitialValueRecord> getPrimaryKey() {
        return Keys.KEY_TM_INITIAL_VALUE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TmInitialValueRecord>> getKeys() {
        return Arrays.<UniqueKey<TmInitialValueRecord>>asList(Keys.KEY_TM_INITIAL_VALUE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TmInitialValue as(String alias) {
        return new TmInitialValue(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TmInitialValue as(Name alias) {
        return new TmInitialValue(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TmInitialValue rename(String name) {
        return new TmInitialValue(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TmInitialValue rename(Name name) {
        return new TmInitialValue(name, null);
    }
}
