/*
 * This file is generated by jOOQ.
*/
package com.jlu.magmalab.dao.tables;


import com.jlu.magmalab.dao.Indexes;
import com.jlu.magmalab.dao.Keys;
import com.jlu.magmalab.dao.Magmlab;
import com.jlu.magmalab.dao.tables.records.TmMixTypeRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TmMixType extends TableImpl<TmMixTypeRecord> {

    private static final long serialVersionUID = -43127110;

    /**
     * The reference instance of <code>magmLab.TM_MIX_TYPE</code>
     */
    public static final TmMixType TM_MIX_TYPE = new TmMixType();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TmMixTypeRecord> getRecordType() {
        return TmMixTypeRecord.class;
    }

    /**
     * The column <code>magmLab.TM_MIX_TYPE.MIX_ID</code>.
     */
    public final TableField<TmMixTypeRecord, String> MIX_ID = createField("MIX_ID", org.jooq.impl.SQLDataType.CHAR(48).nullable(false), this, "");

    /**
     * The column <code>magmLab.TM_MIX_TYPE.MIX_NAME</code>.
     */
    public final TableField<TmMixTypeRecord, String> MIX_NAME = createField("MIX_NAME", org.jooq.impl.SQLDataType.CHAR(100).nullable(false), this, "");

    /**
     * The column <code>magmLab.TM_MIX_TYPE.MIX_MEMO</code>.
     */
    public final TableField<TmMixTypeRecord, String> MIX_MEMO = createField("MIX_MEMO", org.jooq.impl.SQLDataType.CHAR(200), this, "");

    /**
     * Create a <code>magmLab.TM_MIX_TYPE</code> table reference
     */
    public TmMixType() {
        this(DSL.name("TM_MIX_TYPE"), null);
    }

    /**
     * Create an aliased <code>magmLab.TM_MIX_TYPE</code> table reference
     */
    public TmMixType(String alias) {
        this(DSL.name(alias), TM_MIX_TYPE);
    }

    /**
     * Create an aliased <code>magmLab.TM_MIX_TYPE</code> table reference
     */
    public TmMixType(Name alias) {
        this(alias, TM_MIX_TYPE);
    }

    private TmMixType(Name alias, Table<TmMixTypeRecord> aliased) {
        this(alias, aliased, null);
    }

    private TmMixType(Name alias, Table<TmMixTypeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Magmlab.MAGMLAB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TM_MIX_TYPE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TmMixTypeRecord> getPrimaryKey() {
        return Keys.KEY_TM_MIX_TYPE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TmMixTypeRecord>> getKeys() {
        return Arrays.<UniqueKey<TmMixTypeRecord>>asList(Keys.KEY_TM_MIX_TYPE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TmMixType as(String alias) {
        return new TmMixType(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TmMixType as(Name alias) {
        return new TmMixType(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TmMixType rename(String name) {
        return new TmMixType(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TmMixType rename(Name name) {
        return new TmMixType(name, null);
    }
}
