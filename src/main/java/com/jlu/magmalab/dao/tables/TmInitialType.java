/*
 * This file is generated by jOOQ.
*/
package com.jlu.magmalab.dao.tables;


import com.jlu.magmalab.dao.Indexes;
import com.jlu.magmalab.dao.Keys;
import com.jlu.magmalab.dao.Magmlab;
import com.jlu.magmalab.dao.tables.records.TmInitialTypeRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TmInitialType extends TableImpl<TmInitialTypeRecord> {

    private static final long serialVersionUID = 508186949;

    /**
     * The reference instance of <code>magmLab.TM_INITIAL_TYPE</code>
     */
    public static final TmInitialType TM_INITIAL_TYPE = new TmInitialType();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TmInitialTypeRecord> getRecordType() {
        return TmInitialTypeRecord.class;
    }

    /**
     * The column <code>magmLab.TM_INITIAL_TYPE.INITIAL_ID</code>. 初始熔体ID
     */
    public final TableField<TmInitialTypeRecord, String> INITIAL_ID = createField("INITIAL_ID", org.jooq.impl.SQLDataType.CHAR(48).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "初始熔体ID");

    /**
     * The column <code>magmLab.TM_INITIAL_TYPE.INITIAL_NAME</code>. 初始熔体名称
     */
    public final TableField<TmInitialTypeRecord, String> INITIAL_NAME = createField("INITIAL_NAME", org.jooq.impl.SQLDataType.CHAR(100), this, "初始熔体名称");

    /**
     * The column <code>magmLab.TM_INITIAL_TYPE.INITIAL_TYP</code>. 0:初始岩浆 1:初始熔体
     */
    public final TableField<TmInitialTypeRecord, Integer> INITIAL_TYP = createField("INITIAL_TYP", org.jooq.impl.SQLDataType.INTEGER, this, "0:初始岩浆 1:初始熔体");

    /**
     * The column <code>magmLab.TM_INITIAL_TYPE.MEMO</code>. 备注
     */
    public final TableField<TmInitialTypeRecord, String> MEMO = createField("MEMO", org.jooq.impl.SQLDataType.CHAR(255), this, "备注");

    /**
     * Create a <code>magmLab.TM_INITIAL_TYPE</code> table reference
     */
    public TmInitialType() {
        this(DSL.name("TM_INITIAL_TYPE"), null);
    }

    /**
     * Create an aliased <code>magmLab.TM_INITIAL_TYPE</code> table reference
     */
    public TmInitialType(String alias) {
        this(DSL.name(alias), TM_INITIAL_TYPE);
    }

    /**
     * Create an aliased <code>magmLab.TM_INITIAL_TYPE</code> table reference
     */
    public TmInitialType(Name alias) {
        this(alias, TM_INITIAL_TYPE);
    }

    private TmInitialType(Name alias, Table<TmInitialTypeRecord> aliased) {
        this(alias, aliased, null);
    }

    private TmInitialType(Name alias, Table<TmInitialTypeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Magmlab.MAGMLAB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TM_INITIAL_TYPE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TmInitialTypeRecord> getPrimaryKey() {
        return Keys.KEY_TM_INITIAL_TYPE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TmInitialTypeRecord>> getKeys() {
        return Arrays.<UniqueKey<TmInitialTypeRecord>>asList(Keys.KEY_TM_INITIAL_TYPE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TmInitialType as(String alias) {
        return new TmInitialType(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TmInitialType as(Name alias) {
        return new TmInitialType(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TmInitialType rename(String name) {
        return new TmInitialType(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TmInitialType rename(Name name) {
        return new TmInitialType(name, null);
    }
}
