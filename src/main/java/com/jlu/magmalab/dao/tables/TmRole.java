/*
 * This file is generated by jOOQ.
*/
package com.jlu.magmalab.dao.tables;


import com.jlu.magmalab.dao.Indexes;
import com.jlu.magmalab.dao.Keys;
import com.jlu.magmalab.dao.Magmlab;
import com.jlu.magmalab.dao.tables.records.TmRoleRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TmRole extends TableImpl<TmRoleRecord> {

    private static final long serialVersionUID = 909558003;

    /**
     * The reference instance of <code>magmLab.TM_ROLE</code>
     */
    public static final TmRole TM_ROLE = new TmRole();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TmRoleRecord> getRecordType() {
        return TmRoleRecord.class;
    }

    /**
     * The column <code>magmLab.TM_ROLE.ROLE_ID</code>.
     */
    public final TableField<TmRoleRecord, Integer> ROLE_ID = createField("ROLE_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>magmLab.TM_ROLE.ROLE_NAME</code>.
     */
    public final TableField<TmRoleRecord, String> ROLE_NAME = createField("ROLE_NAME", org.jooq.impl.SQLDataType.CHAR(100), this, "");

    /**
     * The column <code>magmLab.TM_ROLE.MEMO</code>.
     */
    public final TableField<TmRoleRecord, String> MEMO = createField("MEMO", org.jooq.impl.SQLDataType.CHAR(200), this, "");

    /**
     * Create a <code>magmLab.TM_ROLE</code> table reference
     */
    public TmRole() {
        this(DSL.name("TM_ROLE"), null);
    }

    /**
     * Create an aliased <code>magmLab.TM_ROLE</code> table reference
     */
    public TmRole(String alias) {
        this(DSL.name(alias), TM_ROLE);
    }

    /**
     * Create an aliased <code>magmLab.TM_ROLE</code> table reference
     */
    public TmRole(Name alias) {
        this(alias, TM_ROLE);
    }

    private TmRole(Name alias, Table<TmRoleRecord> aliased) {
        this(alias, aliased, null);
    }

    private TmRole(Name alias, Table<TmRoleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Magmlab.MAGMLAB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TM_ROLE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TmRoleRecord> getPrimaryKey() {
        return Keys.KEY_TM_ROLE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TmRoleRecord>> getKeys() {
        return Arrays.<UniqueKey<TmRoleRecord>>asList(Keys.KEY_TM_ROLE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TmRole as(String alias) {
        return new TmRole(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TmRole as(Name alias) {
        return new TmRole(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TmRole rename(String name) {
        return new TmRole(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TmRole rename(Name name) {
        return new TmRole(name, null);
    }
}
