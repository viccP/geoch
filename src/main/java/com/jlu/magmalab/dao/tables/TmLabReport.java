/*
 * This file is generated by jOOQ.
*/
package com.jlu.magmalab.dao.tables;


import com.jlu.magmalab.dao.Indexes;
import com.jlu.magmalab.dao.Keys;
import com.jlu.magmalab.dao.Magmlab;
import com.jlu.magmalab.dao.tables.records.TmLabReportRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TmLabReport extends TableImpl<TmLabReportRecord> {

    private static final long serialVersionUID = 1772965879;

    /**
     * The reference instance of <code>magmLab.TM_LAB_REPORT</code>
     */
    public static final TmLabReport TM_LAB_REPORT = new TmLabReport();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TmLabReportRecord> getRecordType() {
        return TmLabReportRecord.class;
    }

    /**
     * The column <code>magmLab.TM_LAB_REPORT.REPORT_ID</code>. 实验报告ID
     */
    public final TableField<TmLabReportRecord, String> REPORT_ID = createField("REPORT_ID", org.jooq.impl.SQLDataType.CHAR(48).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "实验报告ID");

    /**
     * The column <code>magmLab.TM_LAB_REPORT.USER_ID</code>. 用户ID
     */
    public final TableField<TmLabReportRecord, String> USER_ID = createField("USER_ID", org.jooq.impl.SQLDataType.CHAR(48).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "用户ID");

    /**
     * The column <code>magmLab.TM_LAB_REPORT.UPD_TIME</code>. 更新时间
     */
    public final TableField<TmLabReportRecord, Timestamp> UPD_TIME = createField("UPD_TIME", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "更新时间");

    /**
     * The column <code>magmLab.TM_LAB_REPORT.REPORT_SCORE</code>. 报告得分
     */
    public final TableField<TmLabReportRecord, Integer> REPORT_SCORE = createField("REPORT_SCORE", org.jooq.impl.SQLDataType.INTEGER, this, "报告得分");

    /**
     * The column <code>magmLab.TM_LAB_REPORT.REPORT_TEACHER_STATUS</code>. 0:未读  1:已读 
     */
    public final TableField<TmLabReportRecord, Integer> REPORT_TEACHER_STATUS = createField("REPORT_TEACHER_STATUS", org.jooq.impl.SQLDataType.INTEGER, this, "0:未读  1:已读 ");

    /**
     * The column <code>magmLab.TM_LAB_REPORT.REPORT_STUDENT_STATUS</code>. 0:未读  1:已读
     */
    public final TableField<TmLabReportRecord, Integer> REPORT_STUDENT_STATUS = createField("REPORT_STUDENT_STATUS", org.jooq.impl.SQLDataType.INTEGER, this, "0:未读  1:已读");

    /**
     * Create a <code>magmLab.TM_LAB_REPORT</code> table reference
     */
    public TmLabReport() {
        this(DSL.name("TM_LAB_REPORT"), null);
    }

    /**
     * Create an aliased <code>magmLab.TM_LAB_REPORT</code> table reference
     */
    public TmLabReport(String alias) {
        this(DSL.name(alias), TM_LAB_REPORT);
    }

    /**
     * Create an aliased <code>magmLab.TM_LAB_REPORT</code> table reference
     */
    public TmLabReport(Name alias) {
        this(alias, TM_LAB_REPORT);
    }

    private TmLabReport(Name alias, Table<TmLabReportRecord> aliased) {
        this(alias, aliased, null);
    }

    private TmLabReport(Name alias, Table<TmLabReportRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Magmlab.MAGMLAB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TM_LAB_REPORT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TmLabReportRecord> getPrimaryKey() {
        return Keys.KEY_TM_LAB_REPORT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TmLabReportRecord>> getKeys() {
        return Arrays.<UniqueKey<TmLabReportRecord>>asList(Keys.KEY_TM_LAB_REPORT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TmLabReport as(String alias) {
        return new TmLabReport(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TmLabReport as(Name alias) {
        return new TmLabReport(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TmLabReport rename(String name) {
        return new TmLabReport(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TmLabReport rename(Name name) {
        return new TmLabReport(name, null);
    }
}
